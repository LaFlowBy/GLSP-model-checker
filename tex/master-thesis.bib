@misc{glsp-repo,
  author       = {Philip Langer and Tobias Ortmayr},
  title        = {Eclipse GLSP},
  year         = {2025},
  publisher    = {GitHub},
  journal      = {GitHub repository},
  howpublished = {\url{https://github.com/eclipse-glsp/glsp}},
  commit       = {c29a688bb4fa4d0d14c1cb994bdad55d1d4516e1}
}

@misc{henshin-repo,
  author       = {Daniel Strueber},
  title        = {Henshin},
  year         = {2025},
  publisher    = {GitHub},
  journal      = {GitHub repository},
  howpublished = {\url{https://github.com/eclipse-henshin/henshin/wiki}},
  commit       = {41f826df5a02c10c5ef9738434af379af508782f}
}

@misc{emf-repo,
  author       = {Eclipse Foundation},
  title        = {Eclipse Modeling Framework},
  year         = {2025},
  publisher    = {GitHub},
  journal      = {GitHub repository},
  howpublished = {\url{https://github.com/eclipse-emf/org.eclipse.emf}},
  commit       = {157748e0ecdc2368d1cf451ca9c7fc78431c6c91}
}

@book{emf,
  author    = {Steinberg, David and Budinsky, Frank and Paternostro, Marcelo and Merks, Ed},
  title     = {EMF: Eclipse Modeling Framework 2.0},
  year      = {2009},
  isbn      = {0321331885},
  publisher = {Addison-Wesley Professional},
  edition   = {2nd}
}

@inproceedings{modelchecking2,
  author    = {Clarke, Edmund M.},
  editor    = {Ramesh, S.
               and Sivakumar, G.},
  title     = {Model checking},
  booktitle = {Foundations of Software Technology and Theoretical Computer Science},
  year      = {1997},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {54--56},
  abstract  = {Model checking is an automatic technique for verifying finite-state reactive systems, such as sequential circuit designs and communication protocols. Specifications are expressed in temporal logic, and the reactive system is modeled as a statetransition graph. An efficient search procedure is used to determine whether or not the state-transition graph satisfies the specifications.},
  isbn      = {978-3-540-69659-9}
}

@inbook{modelchecking1,
  author    = {McMillan, Kenneth L.},
  title     = {Model Checking},
  booktitle = {Symbolic Model Checking},
  year      = {1993},
  publisher = {Springer US},
  address   = {Boston, MA},
  pages     = {11--24},
  abstract  = {As mentioned in the introduction, a formal verification system has several basic elements. First, we require a model. A model is an imaginary universe, or more generally, a class of possible imaginary universes. To make our model meaningful, we require a theory that predicts some or all of the possible observations that might be made of the model. An observation generally takes the form of the truth or falsehood of a predicate, or statement about the model. Finally, to verify something meaningful about the model, we require a methodology for proving statements that are true in the theory.},
  isbn      = {978-1-4615-3190-6},
  doi       = {10.1007/978-1-4615-3190-6_2},
  url       = {https://doi.org/10.1007/978-1-4615-3190-6_2}
}

@article{modeltransformation,
  title    = {A Taxonomy of Model Transformation},
  journal  = {Electronic Notes in Theoretical Computer Science},
  volume   = {152},
  pages    = {125-142},
  year     = {2006},
  note     = {Proceedings of the International Workshop on Graph and Model Transformation (GraMoT 2005)},
  issn     = {1571-0661},
  doi      = {https://doi.org/10.1016/j.entcs.2005.10.021},
  url      = {https://www.sciencedirect.com/science/article/pii/S1571066106001435},
  author   = {Tom Mens and Pieter {Van Gorp}},
  keywords = {model transformation, taxonomy, comparison, MDD, MDE},
  abstract = {This article proposes a taxonomy of model transformation, based on the discussions of a working group on model transformation of the Dagstuhl seminar on Language Engineering for Model-Driven Software Development. This taxonomy can be used, among others, to help developers in deciding which model transformation language or tool is best suited to carry out a particular model transformation activity.}
}

@inproceedings{henshin,
  author    = {Arendt, Thorsten
               and Biermann, Enrico
               and Jurack, Stefan
               and Krause, Christian
               and Taentzer, Gabriele},
  editor    = {Petriu, Dorina C.
               and Rouquette, Nicolas
               and Haugen, {\O}ystein},
  title     = {Henshin: Advanced Concepts and Tools for In-Place EMF Model Transformations},
  booktitle = {Model Driven Engineering Languages and Systems},
  year      = {2010},
  publisher = {Springer Berlin Heidelberg},
  address   = {Berlin, Heidelberg},
  pages     = {121--135},
  abstract  = {The Eclipse Modeling Framework (EMF) provides modeling and code generation facilities for Java applications based on structured data models. Henshin is a new language and associated tool set for in-place transformations of EMF models. The Henshin transformation language uses pattern-based rules on the lowest level, which can be structured into nested transformation units with well-defined operational semantics. So-called amalgamation units are a special type of transformation units that provide a forall-operator for pattern replacement. For all of these concepts, Henshin offers a visual syntax, sophisticated editing functionalities, execution and analysis tools. The Henshin transformation language has its roots in attributed graph transformations, which offer a formal foundation for validation of EMF model transformations. The transformation concepts are demonstrated using two case studies: EMF model refactoring and meta-model evolution.},
  isbn      = {978-3-642-16145-2}
}

@article{transformations-modeldriven,
  author   = {Sendall, S. and Kozaczynski, W.},
  journal  = {IEEE Software},
  title    = {Model transformation: the heart and soul of model-driven software development},
  year     = {2003},
  volume   = {20},
  number   = {5},
  pages    = {42-45},
  keywords = {Heart;Programming;Unified modeling language;XML;Computer languages;Productivity;Java;Automation;Context modeling;Metamodeling},
  doi      = {10.1109/MS.2003.1231150}
}

@inproceedings{henshin-usability,
  author    = {Str{\"u}ber, Daniel
               and Born, Kristopher
               and Gill, Kanwal Daud
               and Groner, Raffaela
               and Kehrer, Timo
               and Ohrndorf, Manuel
               and Tichy, Matthias},
  editor    = {de Lara, Juan
               and Plump, Detlef},
  title     = {Henshin: A Usability-Focused Framework for EMF Model Transformation Development},
  booktitle = {Graph Transformation},
  year      = {2017},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {196--208},
  abstract  = {Improved usability of tools is a fundamental prerequisite for a more widespread industrial adoption of Model-Driven Engineering. We present the current state of Henshin, a model transformation language and framework based on algebraic graph transformations. Our demonstration focuses on Henshin's novel usability-oriented features, specifically: (i) a textual syntax, complementing the existing graphical one by improved support for rapid transformation development, (ii) extended static validation, including checks for correct integration with general-purpose-language code, (iii) advanced refactoring support, in particular, for splitting large transformation programs, (iv) editing utilities for facilitating recurring tasks in model transformation development. We demonstrate the usefulness of these features using a running example.},
  isbn      = {978-3-319-61470-0}
}

@misc{eclipseGLSP,
  author = {{Eclipse Foundation}},
  title  = {Eclipse GLSP™ – Graphical Language Server Platform},
  year   = {2025},
  url    = {https://eclipse.dev/glsp/},
  note   = {Accessed: 2025-05-20}
}

@online{heise-eclipse-foundation,
  author    = {Alexandra Kleijn},
  title     = {Eclipse und die Eclipse Foundation},
  year      = {2006},
  url       = {https://www.heise.de/-221997},
  note      = {Accessed: 2025-6-2},
  publisher = {heise online}
}

@misc{eclipse-review,
  title        = {Die Eclipse Foundation wird 20 Jahre alt: Die interessantesten {SE-Projekte}},
  author       = {Jastram, Michael},
  publisher    = {Systems Engineering Trends},
  month        = dec,
  year         = 2024,
  howpublished = {\url{https://www.se-trends.de/eclipse-foundation-wird-20-jahre-alt/}},
  note         = {Accessed: 2025-6-2},
  language     = {de}
}

@misc{eclipse-report,
  title        = {2024 Annual Community Report},
  author       = {Eclipse Foundation},
  year         = 2024,
  howpublished = {\url{https://www.eclipse.org/org/foundation/reports/annual_report.php}},
  note         = {Accessed: 2025-6-2},
  language     = {en}
}

@online{eclipse_modeling,
  author    = {{Eclipse Foundation}},
  title     = {Eclipse Modeling Project},
  year      = {2025},
  url       = {https://eclipse.dev/modeling/},
  note      = {Accessed: 2025-06-02},
  publisher = {Eclipse Foundation}
}